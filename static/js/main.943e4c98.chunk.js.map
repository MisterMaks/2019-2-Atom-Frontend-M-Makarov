{"version":3,"sources":["components/WeatherBox.js","components/ManageCities.js","components/WeatherCityPage.js","components/Weather.js","App.js","index.js"],"names":["WeatherBox","props","geo","geoIconURL","src","alt","to","cityName","className","onClick","event","goToWeatherCityPage","cityID","temperature","iconURL","id","ManageCities","cities","locationCity","locationCityName","locationID","locationTemperature","locationIconURL","map","city","key","name","getWeatherForecastForThreeDays","addCity","WeatherCityPage","tomorrowTemperature","tomorrow","tomorrowWeatherIconURL","weatherIconURL","dayAfterTomorrowTemperature","dayAfterTomorrow","dayAfterTomorrowWeatherIconURL","thirdDayTemperature","thirdDay","thirdDayWeatherIconURL","currentIconURL","currentTemperature","Weather","getGeolocation","bind","getWeatherFromGeolocation","getWeatherFromCityName","getWeatherFromID","i","length","state","location","selectedCityData","link","navigator","geolocation","getCurrentPosition","position","currentPositionLatitude","coords","latitude","currentPositionLongitude","longitude","setState","toString","this","lat","long","fetch","headers","origin","document","method","then","resp","json","data","main","temp","weather","icon","newCity","preventDefault","prompt","alert","forecast","list","basename","process","Fragment","exact","path","Component","App","style","height","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.943e4c98.chunk.js","sourcesContent":["import './styles/WeatherBox.css';\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\n\nexport function WeatherBox(props) {\n  let geo = \"\";\n\n  if (props.geoIconURL) {\n    geo = (\n      <img src={props.geoIconURL} alt={props.geoIconURL} />\n    );\n  }\n\n\treturn (\n    <Link to={\"/\"+props.cityName}>\n      <div className=\"weatherBox_place\" \n        onClick={(event) => {\n          props.goToWeatherCityPage(event, props.cityName, props.cityID, props.temperature, props.iconURL, geo)\n        }}\n      >\n        <div className=\"weatherBox\">\n          <div className=\"city\">\n            <div className=\"nameLocation\">{props.cityName}</div>\n            {geo}\n          </div>\n          <div className=\"weatherElements\">\n            <div className=\"weatherPNG\">\n              <img id=\"weatherPNG\" src={props.iconURL} alt={props.iconURL} />\n            </div>\n            <div className=\"weatherTemperature\">{props.temperature}&#176;ะก</div>\n            <div className=\"nextButton\" >\n              <img id=\"nextButton\" src=\"https://c7.uihere.com/icons/590/660/27/next-page-9a0d550fe96e918794194d7470bc2f93.png\" alt=\"https://c7.uihere.com/icons/590/660/27/next-page-9a0d550fe96e918794194d7470bc2f93.png\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n\t);\n}\n","import './styles/ManageCities.css';\nimport React from 'react';\n\nimport {WeatherBox} from './WeatherBox';\n\nexport function ManageCities(props) {\n  let cities = props.cities;\n\n  let locationCity = \"\";\n\n  if (props.locationCityName) {\n    locationCity = (\n      <WeatherBox \n        cityName={props.locationCityName}\n        cityID={props.locationID}\n        temperature={props.locationTemperature}\n        iconURL={props.locationIconURL}\n        geoIconURL=\"https://userscontent2.emaze.com/images/9e7c6f79-e952-4ea8-bb31-cf6c22458724/d05b181d-5b16-4739-a0ff-f8bcfb65c5c5.png\"\n        goToWeatherCityPage={props.goToWeatherCityPage}\n      />\n    )\n  }\n\n  return (\n    <div className=\"manageCities_place\">\n      <div className=\"manageCities_header\">\n        <div className=\"backButton\" />\n        <div className=\"manageCities\">Manage cities</div>\n        <div className=\"writeButton\" />\n      </div>\n      <div className=\"weatherContent\">\n        <div className=\"weatherWrap\">\n          {locationCity}\n          {cities.map((city) => (\n            <WeatherBox \n              key={city.id}\n              cityID={city.id}\n              cityName={city.name}\n              temperature={city.temperature}\n              iconURL={city.iconURL}\n              goToWeatherCityPage={props.goToWeatherCityPage}\n              getWeatherForecastForThreeDays={props.getWeatherForecastForThreeDays}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"newButton_place\">\n\t\t\t\t<div className=\"newButton\" onClick={props.addCity}/>\n\t\t\t</div>\n    </div>\n  );\n}","import './styles/WeatherCityPage.css';\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nexport function WeatherCityPage(props) {\n  const tomorrowTemperature = props.tomorrow.temperature;\n  const tomorrowWeatherIconURL = props.tomorrow.weatherIconURL;\n  const dayAfterTomorrowTemperature = props.dayAfterTomorrow.temperature;\n  const dayAfterTomorrowWeatherIconURL = props.dayAfterTomorrow.weatherIconURL;\n  const thirdDayTemperature = props.thirdDay.temperature;\n  const thirdDayWeatherIconURL = props.thirdDay.weatherIconURL;\n  let geo = \"\";\n  const geoIconURL = \"https://userscontent2.emaze.com/images/9e7c6f79-e952-4ea8-bb31-cf6c22458724/d05b181d-5b16-4739-a0ff-f8bcfb65c5c5.png\";\n\n  if (props.geo) {\n    geo = (\n      <img id=\"geo\" src={geoIconURL} alt={geoIconURL} />\n    );\n  }\n\n  return (\n    <div className=\"weatherCityPage_place\">\n      <div className=\"header\">\n        <Link to=\"/\">\n          <div className=\"backButton\" />\n        </Link>\n        <div className=\"headerName\">Weather in the city</div>\n        <div className=\"something\" />\n      </div>\n      <div className=\"cityName_and_currentIconURL_and_currentTemperature\">\n        <div className=\"city_and_geo\">\n          <div className=\"cityName\">{props.cityName}</div>\n          {geo}\n        </div>\n        <div className=\"currentWeatherPNG_and_currentTemperature\">\n          <div className=\"currentWeatherPNG\">\n            <img id=\"currentWeatherIcon\" src={props.currentIconURL} alt={props.currentIconURL} />\n          </div>\n          <div className=\"currentTemperature\">{props.currentTemperature}</div>\n        </div>\n      </div>\n      <div className=\"weatherForecastForThreeDays\">\n        <div className=\"weatherForecastBox\">\n          <div className=\"day\">Tomorrow</div>\n          <div className=\"weatherPNG_and_temperature\">\n            <div className=\"weatherPNG\">\n              <img id=\"weatherIcon\" src={tomorrowWeatherIconURL} alt={tomorrowWeatherIconURL} />\n            </div>\n            <div className=\"temperature\">{tomorrowTemperature}&#176;ะก</div>\n          </div>\n        </div>\n        <div className=\"weatherForecastBox\">\n          <div className=\"day\">Day after tomorrow</div>\n          <div className=\"weatherPNG_and_temperature\">\n            <div className=\"weatherPNG\">\n              <img id=\"weatherIcon\" src={dayAfterTomorrowWeatherIconURL} alt={dayAfterTomorrowWeatherIconURL} />\n            </div>\n            <div className=\"temperature\">{dayAfterTomorrowTemperature}&#176;ะก</div>\n          </div>\n        </div>\n        <div className=\"weatherForecastBox\">\n          <div className=\"day\">Third day</div>\n          <div className=\"weatherPNG_and_temperature\">\n            <div className=\"weatherPNG\">\n              <img id=\"weatherIcon\" src={thirdDayWeatherIconURL} alt={thirdDayWeatherIconURL} />\n            </div>\n            <div className=\"temperature\">{thirdDayTemperature}&#176;ะก</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { ManageCities } from './ManageCities';\nimport { WeatherCityPage } from './WeatherCityPage';\n\nexport class Weather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getGeolocation = this.getGeolocation.bind(this);\n\t\tthis.getWeatherFromGeolocation = this.getWeatherFromGeolocation.bind(this);\n\t\tthis.getWeatherFromCityName = this.getWeatherFromCityName.bind(this);\n\t\tthis.getWeatherFromID = this.getWeatherFromID.bind(this);\n\t\tthis.addCity = this.addCity.bind(this);\n\t\tthis.goToWeatherCityPage = this.goToWeatherCityPage.bind(this);\n\n\t\tthis.cities = [\n\t\t\t{ id: 524901, name: 'Moscow', temperature: '', iconURL: '' },\n\t\t\t{ id: 498817, name: 'Saint Petersburg', temperature: '', iconURL: '' },\n\t\t\t{ id: 6356055, name: 'Barcelona', temperature: '', iconURL: '' },\n\t\t\t{ id: 3067696, name: 'Prague', temperature: '', iconURL: '' },\n\t\t\t{ id: 3054643, name: 'Budapest', temperature: '', iconURL: '' },\n\t\t\t{ id: 5128581, name: 'New York', temperature: '', iconURL: '' },\n\t\t\t{ id: 5368361, name: 'Los Angeles', temperature: '', iconURL: '' },\n\t\t\t{ id: 5391959, name: 'San Francisco', temperature: '', iconURL: '' },\n\t\t\t{ id: 6455259, name: 'Paris', temperature: '', iconURL: '' },\n\t\t\t{ id: 2761369, name: 'Vienna', temperature: '', iconURL: '' },\n\t\t];\n\n\t\tfor (let i = 0; i < this.cities.length; i = 1 + i) {\n\t\t\tthis.getWeatherFromID(this.cities[i].id);\n\t\t}\n\n\t\tthis.state = {\n\t\t\tlocation: '',\n\t\t\tlocationID: '',\n\t\t\tlocationTemperature: '',\n\t\t\tlocationIconURL: '',\n\t\t\tcities: [],\n\t\t\tselectedCityData: {\n\t\t\t\tlink: '',\n\t\t\t\tcityID: '',\n\t\t\t\tcityName: '',\n\t\t\t\tcurrentTemperature: '',\n\t\t\t\tcurrentIconURL: '',\n\t\t\t\tgeo: '',\n\t\t\t},\n\t\t\ttomorrow: [],\n\t\t\tdayAfterTomorrow: [],\n\t\t\tthirdDay: [],\n\t\t};\n\n\t\tthis.getGeolocation();\n\t}\n\n\tgetGeolocation() {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tconst currentPositionLatitude = position.coords.latitude;\n\t\t\tconst currentPositionLongitude = position.coords.longitude;\n\t\t\tthis.setState({\n\t\t\t\tlocation: [\n\t\t\t\t\tcurrentPositionLatitude.toString(),\n\t\t\t\t\tcurrentPositionLongitude.toString(),\n\t\t\t\t],\n\t\t\t});\n\t\t\tthis.getWeatherFromGeolocation();\n\t\t});\n\t}\n\n\tgetWeatherFromGeolocation() {\n\t\tconst [lat, long] = this.state.location;\n\t\tfetch(\n\t\t\t`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=metric&APPID=22974c3e3aacf49aa6ed8191ccca8d39`,\n\t\t\t{\n\t\t\t\theaders: { origin: document.origin },\n\t\t\t\tmethod: 'GET',\n\t\t\t},\n\t\t)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tlocation: data.name,\n\t\t\t\t\tlocationID: data.id,\n\t\t\t\t\tlocationTemperature: data.main.temp,\n\t\t\t\t\tlocationIconURL: `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetWeatherFromCityName(event, cityName) {\n\t\tfetch(\n\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&APPID=22974c3e3aacf49aa6ed8191ccca8d39`,\n\t\t\t{\n\t\t\t\theaders: { origin: document.origin },\n\t\t\t\tmethod: 'GET',\n\t\t\t},\n\t\t)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst newCity = {\n\t\t\t\t\tid: data.id,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\ttemperature: data.main.temp,\n\t\t\t\t\ticonURL: `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n\t\t\t\t};\n\t\t\t\tthis.setState({ cities: [...this.state.cities, newCity] });\n\t\t\t});\n\t\tevent.preventDefault();\n\t}\n\n\tgetWeatherFromID(cityID) {\n\t\tfetch(\n\t\t\t`https://api.openweathermap.org/data/2.5/weather?id=${cityID}&units=metric&APPID=22974c3e3aacf49aa6ed8191ccca8d39`,\n\t\t\t{\n\t\t\t\theaders: { origin: document.origin },\n\t\t\t\tmethod: 'GET',\n\t\t\t},\n\t\t)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst name = data.name;\n\t\t\t\tconst temperature = data.main.temp;\n\t\t\t\tconst iconURL = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n\t\t\t\tconst city = {\n\t\t\t\t\tid: cityID,\n\t\t\t\t\tname: name,\n\t\t\t\t\ttemperature: temperature,\n\t\t\t\t\ticonURL: iconURL,\n\t\t\t\t};\n\t\t\t\tthis.setState({ cities: [...this.state.cities, city] });\n\t\t\t});\n\t}\n\n\taddCity(event) {\n\t\tconst city = prompt('ะะฒะตะดะธัะต ะฝะฐะทะฒะฐะฝะธะต ะณะพัะพะดะฐ', 'Washington');\n\t\tif (city) {\n\t\t\tfor (let i = 0; i < this.cities.length; i = i + 1) {\n\t\t\t\tif (this.cities[i].name === city) {\n\t\t\t\t\talert('ะขะฐะบะพะน ะณะพัะพะด ัะถะต ะตััั ะฒ ัะฟะธัะบะต');\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.getWeatherFromCityName(event, city);\n\t\t}\n\t}\n\n\tgoToWeatherCityPage(\n\t\tevent,\n\t\tcity,\n\t\tcityID,\n\t\tcurrentTemperature,\n\t\tcurrentIconURL,\n\t\tgeo,\n\t) {\n\t\tfetch(\n\t\t\t`https://api.openweathermap.org/data/2.5/forecast?id=${cityID}&units=metric&APPID=22974c3e3aacf49aa6ed8191ccca8d39`,\n\t\t\t{\n\t\t\t\theaders: { origin: document.origin },\n\t\t\t\tmethod: 'GET',\n\t\t\t},\n\t\t)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst forecast = data.list;\n\t\t\t\tconst tomorrow = {\n\t\t\t\t\ttemperature: forecast[8].main.temp,\n\t\t\t\t\tweatherIconURL: `https://openweathermap.org/img/wn/${forecast[8].weather[0].icon}@2x.png`,\n\t\t\t\t};\n\t\t\t\tconst dayAfterTomorrow = {\n\t\t\t\t\ttemperature: forecast[16].main.temp,\n\t\t\t\t\tweatherIconURL: `https://openweathermap.org/img/wn/${forecast[16].weather[0].icon}@2x.png`,\n\t\t\t\t};\n\t\t\t\tconst thirdDay = {\n\t\t\t\t\ttemperature: forecast[24].main.temp,\n\t\t\t\t\tweatherIconURL: `https://openweathermap.org/img/wn/${forecast[24].weather[0].icon}@2x.png`,\n\t\t\t\t};\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttomorrow: tomorrow,\n\t\t\t\t\tdayAfterTomorrow: dayAfterTomorrow,\n\t\t\t\t\tthirdDay: thirdDay,\n\t\t\t\t\tselectedCityData: {\n\t\t\t\t\t\tlink: city,\n\t\t\t\t\t\tcityID: cityID,\n\t\t\t\t\t\tcityName: city,\n\t\t\t\t\t\tcurrentTemperature: currentTemperature,\n\t\t\t\t\t\tcurrentIconURL: currentIconURL,\n\t\t\t\t\t\tgeo: geo,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<ManageCities\n\t\t\t\t\t\t\t\tcities={this.state.cities}\n\t\t\t\t\t\t\t\tlocationCityName={this.state.location}\n\t\t\t\t\t\t\t\tlocationID={this.state.locationID}\n\t\t\t\t\t\t\t\tlocationTemperature={this.state.locationTemperature}\n\t\t\t\t\t\t\t\tlocationIconURL={this.state.locationIconURL}\n\t\t\t\t\t\t\t\taddCity={this.addCity}\n\t\t\t\t\t\t\t\tgoToWeatherCityPage={this.goToWeatherCityPage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path={'/' + this.state.selectedCityData.link}>\n\t\t\t\t\t\t\t<WeatherCityPage\n\t\t\t\t\t\t\t\tcityID={this.state.selectedCityData.cityID}\n\t\t\t\t\t\t\t\tcityName={this.state.selectedCityData.cityName}\n\t\t\t\t\t\t\t\tcurrentTemperature={\n\t\t\t\t\t\t\t\t\tthis.state.selectedCityData.currentTemperature\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcurrentIconURL={this.state.selectedCityData.currentIconURL}\n\t\t\t\t\t\t\t\tgeo={this.state.selectedCityData.geo}\n\t\t\t\t\t\t\t\ttomorrow={this.state.tomorrow}\n\t\t\t\t\t\t\t\tdayAfterTomorrow={this.state.dayAfterTomorrow}\n\t\t\t\t\t\t\t\tthirdDay={this.state.thirdDay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</React.Fragment>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nimport { Weather } from './components/Weather';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ height: '100%' }}>\n\t\t\t\t<Weather />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}